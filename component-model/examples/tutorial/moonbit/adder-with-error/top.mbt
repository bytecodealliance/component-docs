// Generated by `wit-bindgen` 0.45.0. DO NOT EDIT!

///|
pub(all) suberror ComputationError {
  Overflow
} derive(Show, Eq)

///|
pub fn add(x : UInt, y : UInt) -> Result[UInt, ComputationError] {
  let return_area = @ffi.malloc(8)
  wasmImportAdd(x.reinterpret_as_int(), y.reinterpret_as_int(), return_area)
  let lifted4 = match @ffi.load8_u(return_area + 0) {
    0 => Result::Ok(@ffi.load32(return_area + 4).reinterpret_as_uint())
    1 => {
      let lifted = match @ffi.load8_u(return_area + 4) {
        0 => ComputationError::Overflow
        _ => panic()
      }
      Result::Err(lifted)
    }
    _ => panic()
  }
  @ffi.free(return_area)
  return lifted4
}
